/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package EmployeeView;

import java.awt.event.ActionListener;
import java.util.Calendar;

import javax.swing.*;

import dao.ProductDao;

/**
 *
 * @author larry
 */

@SuppressWarnings({ "unchecked", "rawtypes" })
public class ManageProductView extends JDialog {
	
	private ProductDao pr_model;

	// Variables declaration - do not modify//GEN-BEGIN:variables
    private JLabel descriptionLabel;
    private JScrollPane descriptionScrollPane;
    private JTextArea descriptionTextArea;
    private JComboBox genreBox;
    private JTextField genreField;
    private JLabel genreLabel;
    private JLabel headerLabel;
    private JComboBox ratingBox;
    private JTextField ratingField;
    private JLabel ratingLabel;
    private JButton resetButton;
    private JButton submitButton;
    private JTextField titleField;
    private JLabel titleLabel;
    private JComboBox typeBox;
    private JLabel typeLabel;
    private JComboBox yearBox;
    private JLabel yearLabel;
    // End of variables declaration//GEN-END:variables
    
    /**
     * Creates new form ManageProductView
     */
    public ManageProductView(java.awt.Frame parent, boolean modal, ProductDao model) {
        super(parent, modal);
        setResizable(false);
        initComponents();
    }
    
    //Methods to return the text of the fields 
    public String getTitleField(){
    	return titleField.getText();
    }
    
    public String getDescription(){
    	return descriptionTextArea.getText();
    }
    
    public int getYear(){
    	return Integer.parseInt(yearBox.getSelectedItem().toString());
    }
    
    public String getGenre(){
    	return genreBox.getSelectedItem().toString();
    }
    
    public String getRating(){
    	return ratingBox.getSelectedItem().toString();
    }
    
    public String getTypeBox(){
    	return typeBox.getSelectedItem().toString();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        descriptionScrollPane = new JScrollPane();
        descriptionTextArea = new JTextArea();
        typeLabel = new JLabel();
        ratingLabel = new JLabel();
        descriptionLabel = new JLabel();
        yearLabel = new JLabel();
        genreLabel = new JLabel();
        titleField = new JTextField();
        yearBox = new JComboBox();
        ratingField = new JTextField();
        genreField = new JTextField();
        ratingBox = new JComboBox();
        titleLabel = new JLabel();
        genreBox = new JComboBox();
        headerLabel = new JLabel();
        resetButton = new JButton();
        submitButton = new JButton();
        typeBox = new JComboBox();

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Manage Movie");

        descriptionTextArea.setColumns(20);
        descriptionTextArea.setRows(5);
        descriptionScrollPane.setViewportView(descriptionTextArea);

        typeLabel.setText("Type");

        ratingLabel.setText("Rating");

        descriptionLabel.setText("Description");

        yearLabel.setText("Year");

        genreLabel.setText("Genre");

        yearBox.setModel(new DefaultComboBoxModel(populateYears()));

        ratingField.setEnabled(false);
        ratingField.setVisible(false);

        genreField.setEnabled(false);
        genreField.setVisible(false);

        ratingBox.setModel(new DefaultComboBoxModel(populateRatings()));

        titleLabel.setText("Title");

        genreBox.setModel(new DefaultComboBoxModel(populateGenres()));

        headerLabel.setFont(new java.awt.Font("Ubuntu", 3, 18)); // NOI18N
        headerLabel.setHorizontalAlignment(SwingConstants.CENTER);
        headerLabel.setText("Add New Movie");

        resetButton.setText("Reset");

        submitButton.setText("Add Movie");

        typeBox.setModel(new DefaultComboBoxModel(populateTypes()));

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.CENTER)
                    .addComponent(headerLabel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(descriptionLabel)
                    .addComponent(descriptionScrollPane)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(resetButton, GroupLayout.PREFERRED_SIZE, 70, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(submitButton, GroupLayout.PREFERRED_SIZE, 100, GroupLayout.PREFERRED_SIZE))
                    .addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(titleLabel)
                            .addComponent(genreLabel))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(titleField, GroupLayout.PREFERRED_SIZE, 266, GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(yearLabel)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(yearBox, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(genreBox, GroupLayout.PREFERRED_SIZE, 100, GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(ratingLabel)
                                        .addGap(11, 11, 11))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(genreField, GroupLayout.PREFERRED_SIZE, 100, GroupLayout.PREFERRED_SIZE)
                                        .addGap(92, 92, 92)))
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(ratingField)
                                    .addComponent(ratingBox, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(34, 34, 34)
                                .addComponent(typeLabel)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(typeBox, GroupLayout.PREFERRED_SIZE, 115, GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(headerLabel)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(titleLabel)
                            .addComponent(yearLabel)
                            .addComponent(titleField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(yearBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(genreLabel)
                            .addComponent(ratingLabel)
                            .addComponent(genreBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(ratingBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(typeLabel)
                            .addComponent(typeBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addGap(49, 49, 49))
                    .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(genreField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(ratingField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(descriptionLabel, GroupLayout.PREFERRED_SIZE, 17, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(descriptionScrollPane, GroupLayout.PREFERRED_SIZE, 112, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(resetButton)
                    .addComponent(submitButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public void addSubmitButtonListener(ActionListener submit) {
        submitButton.addActionListener(submit);
    }
    
    public void addResetButtonListener(ActionListener reset) {
        resetButton.addActionListener(reset);
    }
    
    public void reset() {
    	titleField.setText("");
    	yearBox.setSelectedIndex(0);
    	genreBox.setSelectedIndex(0);
        genreField.setText("");
        genreField.setEnabled(false);
        genreField.setVisible(false);
    	ratingBox.setSelectedIndex(0);
        ratingField.setText("");
        ratingField.setEnabled(false);
        ratingField.setVisible(false);
        typeBox.setSelectedIndex(0);
        descriptionTextArea.setText("");
    }
    
    private String[] populateYears() {
		int year = Calendar.getInstance().get(Calendar.YEAR);
		String [] years = new String[year-1949];
		
		for (int i = 0; i < years.length; i++) {
			years[i] = Integer.toString(year-i);
		}
		return years;
	}
    
    private String[] populateTypes() {
		String [] types = {"DVD", "BlueRay"};
		return types;
	}
    
    private String[] populateRatings() {
		String [] ratings = {"UR (Unrated)", "G", "PG", "PG-13", "R", "NC-17"};
		return ratings;
	}
    
    private String[] populateGenres() {
		String [] genres = {"Action", "Adventure", "Animation", "Biography",
							"Comedy", "Crime", "Documentary", "Drama",
							"Family", "Fantasy", "Film-Noir", "Game-Show",
							"History", "Horror", "Music", "Musical", "Mystery",
							"News", "Reality-TV", "Romance", "Sci-Fi", "Sport",
							"Talk-Show", "Thriller", "War", "Western"};
		return genres;
	}
}