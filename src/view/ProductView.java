/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.*;
import java.awt.event.ActionListener;
import java.awt.event.FocusListener;
import java.awt.event.ItemListener;
import java.awt.event.MouseListener;
import java.sql.Date;
import java.util.ArrayList;
import java.util.Calendar;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;

import dao.ProductDao;
import main.Main;

/**
 *
 * @author larry
 */
public class ProductView extends JFrame {
	// Variables declaration - do not modify//GEN-BEGIN:variables
	private ProductDao pr_model;
	
    private JButton addMovieButton;
    private JButton searchButton;
    private JButton logButton;
    private JButton manageCustomerButton;
    private JLabel mTableLabel;
    private JScrollPane movieListFrame;
    private JTable moviesTable;
    private JTextField searchField;
    private JLabel searchLabel;
    private JLabel editMovieLabel;
    private JLabel noticeLabel;
    private JScrollPane tableScrollPane;
    private JComboBox viewByBox;
    private JLabel viewByLabel;
    private JComboBox viewByOptionBox;
    private JLabel loginLabel;
    
    private String[] columns = {"Title", "Genre", "Rating", "Release Year", "Type"};
    
    private Object[] row = new Object[5];
    
    private DefaultTableModel model = new DefaultTableModel(columns, 0);
    // End of variables declaration//GEN-END:variables
    /**
     * Creates new form ProductView
     */
    public ProductView(ProductDao model) {
        initComponents();
        this.setSize(800, 600);
        //this.setResizable(false);
    }
    
    // get() methods to give access to other classes
    public JTextField getSearchField(){
    	return searchField;
    }
    
    public JComboBox getViewByOptionBox(){
    	return viewByOptionBox;
    }
    
    public JComboBox getViewByBox(){
    	return viewByBox;
    }
    
    public JLabel getNoticeLabel(){
    	return this.noticeLabel;
    }
    
    public JLabel getEditMovieLabel(){
    	return this.editMovieLabel;
    }
    
    public JLabel getLoginLabel(){
    	return this.loginLabel;
    }
    
    public JButton getLogButton(){
    	return this.logButton;
    }
    
    public JButton getAddMovieButton(){
    	return this.addMovieButton;
    }
    
    public JButton getManageCustomerButton(){
    	return this.manageCustomerButton;
    }
    // End of get() methods

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mTableLabel = new JLabel();
        viewByLabel = new JLabel();
        tableScrollPane = new JScrollPane();
        viewByBox = new JComboBox();
        viewByOptionBox = new JComboBox();
        addMovieButton = new JButton();
        searchLabel = new JLabel();
        searchField = new JTextField();
        searchButton = new JButton();
        noticeLabel = new JLabel();
        editMovieLabel = new JLabel();
        loginLabel = new JLabel();
        logButton = new JButton();
        manageCustomerButton = new JButton();
        
        moviesTable = new JTable(){
       	 public boolean isCellEditable(int row, int column){  
       		    return false;  
       		  } 
       };

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setTitle("Video Club");

        mTableLabel.setFont(new Font("Ubuntu", 3, 24)); // NOI18N
        mTableLabel.setHorizontalAlignment(SwingConstants.CENTER);
        mTableLabel.setText("Movies List");

        viewByLabel.setText("View Movies By:");
        
        moviesTable.setModel(model);
        moviesTable.setColumnSelectionAllowed(true);
        moviesTable.getTableHeader().setReorderingAllowed(false);
        tableScrollPane.setViewportView(moviesTable);
        moviesTable.getColumnModel().getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        moviesTable.getColumnModel().getColumn(0).setResizable(true);
        moviesTable.getColumnModel().getColumn(1).setResizable(true);
        moviesTable.getColumnModel().getColumn(2).setResizable(true);
        moviesTable.getColumnModel().getColumn(3).setResizable(true);
        moviesTable.getColumnModel().getColumn(4).setResizable(true);
        moviesTable.getColumnModel().setColumnSelectionAllowed(false);
        moviesTable.setSelectionMode(0);

        viewByBox.setModel(new DefaultComboBoxModel(new String[] { "All", "Genre", "Rating", "Year", "Type" }));
        viewByOptionBox.setVisible(false);

        logButton.setText("Login");
        
        addMovieButton.setText("Add New Movie");
        addMovieButton.setEnabled(false);
        addMovieButton.setVisible(false);
        
        manageCustomerButton.setText("Manage User");
        manageCustomerButton.setEnabled(false);
        manageCustomerButton.setVisible(false);

        searchLabel.setText("Search By Title:");

        searchButton.setText("Submit");

        noticeLabel.setVisible(false);
        
        editMovieLabel.setText("Double-Click on a movie to edit its details");
        editMovieLabel.setVisible(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mTableLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tableScrollPane, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addMovieButton)
                            .addComponent(manageCustomerButton))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(viewByLabel)
                                .addGap(106, 106, 106)
                                .addComponent(searchLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(viewByBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(viewByOptionBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(searchButton)
                                .addGap(0, 66, Short.MAX_VALUE))
                            .addComponent(searchField)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(noticeLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(editMovieLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(loginLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(logButton, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(mTableLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editMovieLabel)
                    .addComponent(logButton)
                    .addComponent(loginLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewByLabel)
                    .addComponent(addMovieButton)
                    .addComponent(searchLabel)
                    .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewByBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewByOptionBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton)
                    .addComponent(manageCustomerButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(noticeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );

    }
    
    public void addViewByBoxItemStateChanged(ItemListener viewBy) {
        viewByBox.addItemListener(viewBy);
    }
    
    public void addViewByOptionBoxItemStateChanged(ItemListener viewByOption) {
        viewByOptionBox.addItemListener(viewByOption);
    }
    
    public void addLogListener(ActionListener log) {
        logButton.addActionListener(log);
    }
    
    public void addSubmitSearchListener(ActionListener search) {
        searchButton.addActionListener(search);
    }
    
    public void addNewMovieListener(ActionListener addMovie) {
        addMovieButton.addActionListener(addMovie);
    }
    
    public void addSearchFieldFocusGained(FocusListener searchFocus) {
        searchField.addFocusListener(searchFocus);
    }
    
    public void addMouseListener(MouseListener tableDoubleClick){
    	moviesTable.addMouseListener(tableDoubleClick);
    }
    
    public void userLoggedIn(){
    	logButton.setText("Logout");
    	loginLabel.setText("Welcome " + Main.name);
    	loginLabel.setVisible(true);
    }
    
    public void userLoggedOut() {
		editMovieLabel.setVisible(false);
		loginLabel.setVisible(false);
		addMovieButton.setEnabled(false);
		addMovieButton.setVisible(false);
		manageCustomerButton.setEnabled(false);
		manageCustomerButton.setVisible(false);
		logButton.setText("Login");
	}
    
    public void showAddMovieButton(){
    	addMovieButton.setEnabled(true);
		addMovieButton.setVisible(true);
    }
    
    public void showEditLabel(){
    	editMovieLabel.setVisible(true);
    }
    
    public void showManageCustomerButton(){
    	manageCustomerButton.setEnabled(true);
    	manageCustomerButton.setVisible(true);
    }
    
    public void addOne(ArrayList<Object> oneProduct) {
		row[0] = oneProduct.get(0);
        row[1] = oneProduct.get(1);
        row[2] = oneProduct.get(2);
        row[3] = oneProduct.get(3);
        row[4] = oneProduct.get(4);
        model.addRow(row);
	}
        
    public void showAll(ArrayList<Object> allProducts) {
    	int tableSize = model.getRowCount();
    	
    	for (int i = 0; i < tableSize; i++) {
    		model.removeRow(tableSize-i-1);
    	}
    	
    	for (int i = 0; i < allProducts.size(); i += 5) {
    		row[0] = allProducts.get(i);
    		row[1] = allProducts.get(i+1);
    		row[2] = allProducts.get(i+2);
    		row[3] = allProducts.get(i+3);
    		row[4] = allProducts.get(i+4);
    		model.addRow(row);
    	}
    }
    
    
	
	//Populate ComboBoxes' Values
	public void populateGenres() {
		String [] genres = {"Action", "Adventure", "Animation", "Biography",
							"Comedy", "Crime", "Documentary", "Drama",
							"Family", "Fantasy", "Film-Noir", "Game-Show",
							"History", "Horror", "Music", "Musical", "Mystery",
							"News", "Reality-TV", "Romance", "Sci-Fi", "Sport",
							"Talk-Show", "Thriller", "War", "Western"};
		viewByOptionBox.setModel(new DefaultComboBoxModel(genres));
		viewByOptionBox.setVisible(true);
	}
	
	public void populateRatings() {
		String [] ratings = {"UR (Unrated)", "G", "PG", "PG-13", "R", "NC-17"};
		viewByOptionBox.setModel(new DefaultComboBoxModel(ratings));
		viewByOptionBox.setVisible(true);
	}
	
	public void populateYears() {
		int year = Calendar.getInstance().get(Calendar.YEAR);
		String [] years = new String[year-1949];
		
		for (int i = 0; i < years.length; i++) {
			years[i] = Integer.toString(year-i);
		}
		viewByOptionBox.setModel(new DefaultComboBoxModel(years));
		viewByOptionBox.setVisible(true);
	}
	
	public void populateTypes() {
		String [] types = {"DVD", "BlueRay"};
		viewByOptionBox.setModel(new DefaultComboBoxModel(types));
		viewByOptionBox.setVisible(true);
	}

	public void updateRow(int row, ArrayList<Object> product) {
		moviesTable.setValueAt(product.get(0), row, 0);
		moviesTable.setValueAt(product.get(1), row, 1);
		moviesTable.setValueAt(product.get(2), row, 2);
		moviesTable.setValueAt(product.get(3), row, 3);
		moviesTable.setValueAt(product.get(4), row, 4);
		
	}
	
}